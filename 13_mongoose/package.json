{
  "name": "13_mongoose",
  "version": "1.0.0",
  "description": "* setup packages   * `npm init -y`   * `npm i -D jest eslint supertest nodemon`   * `npm i express mongoose dotenv`   * create scripts (pretest, test, test:watch, start, start:watch) * create `app.js`   * add middleware     * use morgan for logging       * `npm i morgan`     * use `express.json()     * create error middleware     * create `notFound` middleware * create server.js   * configure `dotenv`   * add app listener * add mongoose   * create connect util   * add to server.js   * create mongoose-connection middleware * create Warehouse model   * add states util   * create lib/models/Warehouse.js   * create schema   * create model * create warehouse routes   * create lib/routes/warehouses.js * refactor tests   * use dataHelpers * create Employee model * add employee to seedData and dataHelpers * create employees routes * create Item model * add item to seedData and dataHelpers * create item routes",
  "main": "server.js",
  "scripts": {
    "test": "jest --verbose --runInBand",
    "test:watch": "npm run test -- --watch",
    "test:debug": "node --inspect-brk node_modules/.bin/jest --runInBand",
    "start": "node server.js",
    "start:watch": "nodemon server.js"
  },
  "jest": {
    "testEnvironment": "node"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "dotenv": "^7.0.0",
    "express": "^4.16.4",
    "md5": "^2.2.1",
    "mongoose": "^5.5.2",
    "morgan": "^1.9.1",
    "superagent": "^5.0.2"
  },
  "devDependencies": {
    "chance": "^1.0.18",
    "eslint": "^5.16.0",
    "jest": "^24.7.1",
    "nodemon": "^1.18.11",
    "supertest": "^4.0.2"
  },
  "directories": {
    "lib": "lib",
    "test": "test"
  }
}
